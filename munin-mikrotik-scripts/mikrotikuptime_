#!/usr/bin/perl

# Original script from: http://wiki.mikrotik.com/wiki/Munin_Monitoring

# USAGE
#
# place the script in the munin plugins folder and use the following naming convention:
#
# mikrotikuptime_router-hostname
#
# example:
# mikrotikuptime_router01.local.net
#
# Configuration:
#  - Set your SNMP community string $SNMPCommunity
# 
# 

###############################################################################
use diagnostics;
use Net::SNMP;
use strict;
use warnings;
###############################################################################
my $UPTOID = ".1.3.6.1.2.1.1.3.0";

# Set your SNMP community string
my $SNMPCommunity = "community";
my $SNMPPort = "161";

###############################################################################
## Determine Hostname
my $Host = undef;
$0 =~ /mikrotikuptime_(.+)*$/;
unless ($Host = $1) {
  exit 2;
}

###############################################################################
## Initiate SNMP Session
my ($Session, $Error) = Net::SNMP->session (-hostname  => $Host,
                                            -community => $SNMPCommunity,
                                            -port      => $SNMPPort,
                                            -timeout   => 60,
                                            -retries   => 5,
                                            -version   => 1);
if (!defined($Session)) {
  die "Croaking: $Error";
}

###############################################################################
## Configuration
if ($ARGV[0] && $ARGV[0] eq "config") {
  print "host_name " . $Host . "\n";
  print "graph_args --base 1000 -l 0\n";
  print "graph_title Uptime\n";
  print "graph_category system\n";
  print "graph_info This graph shows the router's uptime.\n";
  print "graph_vlabel uptime in days\n";
  print "graph_scale no\n";
  print "uptime.label uptime\n";
  print "uptime.draw AREA\n";
  $Session->close;
  exit;
}

###############################################################################
## Execution
if (my $Result = $Session->get_request(-varbindlist => [$UPTOID])) {
  #debug
  #print "Total.value " . $Result->{$UPTOID} . "\n";
  # 1 day, 21:23:18.00
  if ($Result->{$UPTOID} =~ m/(\d*)\sday(s,|,)\s(\d\d):(\d\d):(\d\d)\.\d\d/){
    #debug
    #print "Days:" . $1 . "\n";
    my $days = $1;
    #print "Hours:" . $3 . "\n";
    my $hours = $3;
    #print "Minutes:" . $4 . "\n";
    my $minutes = $4;
    #print "Seconds:" . $5 . "\n";
    my $seconds = $5;

    my $totalseconds  = ($days*86400) + ($hours*3600) + ($minutes*60) + $seconds;
    #print $totalseconds . "\n";
    my $decimaluptime = $totalseconds / 86400;
    print "uptime.value " . $decimaluptime . "\n";
  }   
  $Session->close;
  exit;
}

